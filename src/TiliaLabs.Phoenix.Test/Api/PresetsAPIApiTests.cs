/* 
 * tilia Phoenix API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.0.6
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using TiliaLabs.Phoenix.Client;
using TiliaLabs.Phoenix.Api;
using TiliaLabs.Phoenix.Model;

namespace TiliaLabs.Phoenix.Test
{
    /// <summary>
    ///  Class for testing PresetsAPIApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class PresetsAPIApiTests
    {
        private PresetsAPIApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PresetsAPIApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PresetsAPIApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PresetsAPIApi
            //Assert.IsInstanceOfType(typeof(PresetsAPIApi), instance, "instance is a PresetsAPIApi");
        }

        /// <summary>
        /// Test AddImpositionAiProfiles1
        /// </summary>
        [Test]
        public void AddImpositionAiProfiles1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ImpositionAiProfileEntity body = null;
            //var response = instance.AddImpositionAiProfiles1(body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test DeleteImpositionAiProfiles1
        /// </summary>
        [Test]
        public void DeleteImpositionAiProfiles1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string profileId = null;
            //var response = instance.DeleteImpositionAiProfiles1(profileId);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test EditImpositionAiProfiles1
        /// </summary>
        [Test]
        public void EditImpositionAiProfiles1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string profileId = null;
            //ImpositionAiProfileEntity body = null;
            //var response = instance.EditImpositionAiProfiles1(profileId, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test GetCff2DieExportPresets
        /// </summary>
        [Test]
        public void GetCff2DieExportPresetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCff2DieExportPresets();
            //Assert.IsInstanceOf<List<PresetEntity>> (response, "response is List<PresetEntity>");
        }
        /// <summary>
        /// Test GetCff2DieLayoutImportPresets1
        /// </summary>
        [Test]
        public void GetCff2DieLayoutImportPresets1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCff2DieLayoutImportPresets1();
            //Assert.IsInstanceOf<List<PresetEntity>> (response, "response is List<PresetEntity>");
        }
        /// <summary>
        /// Test GetCoverSheetExportPresets
        /// </summary>
        [Test]
        public void GetCoverSheetExportPresetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCoverSheetExportPresets();
            //Assert.IsInstanceOf<List<PresetEntity>> (response, "response is List<PresetEntity>");
        }
        /// <summary>
        /// Test GetCuttingJdfExportPresets
        /// </summary>
        [Test]
        public void GetCuttingJdfExportPresetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCuttingJdfExportPresets();
            //Assert.IsInstanceOf<List<PresetEntity>> (response, "response is List<PresetEntity>");
        }
        /// <summary>
        /// Test GetDdes2DieLayoutImportPresets1
        /// </summary>
        [Test]
        public void GetDdes2DieLayoutImportPresets1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetDdes2DieLayoutImportPresets1();
            //Assert.IsInstanceOf<List<PresetEntity>> (response, "response is List<PresetEntity>");
        }
        /// <summary>
        /// Test GetDdes3DieLayoutImportPresets1
        /// </summary>
        [Test]
        public void GetDdes3DieLayoutImportPresets1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetDdes3DieLayoutImportPresets1();
            //Assert.IsInstanceOf<List<PresetEntity>> (response, "response is List<PresetEntity>");
        }
        /// <summary>
        /// Test GetDxfDieLayoutImportPresets1
        /// </summary>
        [Test]
        public void GetDxfDieLayoutImportPresets1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetDxfDieLayoutImportPresets1();
            //Assert.IsInstanceOf<List<PresetEntity>> (response, "response is List<PresetEntity>");
        }
        /// <summary>
        /// Test GetGangingProfiles
        /// </summary>
        [Test]
        public void GetGangingProfilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetGangingProfiles();
            //Assert.IsInstanceOf<List<PresetEntity>> (response, "response is List<PresetEntity>");
        }
        /// <summary>
        /// Test GetHpJdfExportPresets
        /// </summary>
        [Test]
        public void GetHpJdfExportPresetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetHpJdfExportPresets();
            //Assert.IsInstanceOf<List<PresetEntity>> (response, "response is List<PresetEntity>");
        }
        /// <summary>
        /// Test GetImposedJdfExportPresets
        /// </summary>
        [Test]
        public void GetImposedJdfExportPresetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetImposedJdfExportPresets();
            //Assert.IsInstanceOf<List<PresetEntity>> (response, "response is List<PresetEntity>");
        }
        /// <summary>
        /// Test GetImposedPdfExportPresets
        /// </summary>
        [Test]
        public void GetImposedPdfExportPresetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetImposedPdfExportPresets();
            //Assert.IsInstanceOf<List<PresetEntity>> (response, "response is List<PresetEntity>");
        }
        /// <summary>
        /// Test GetImpositionAiProfiles
        /// </summary>
        [Test]
        public void GetImpositionAiProfilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string profileId = null;
            //var response = instance.GetImpositionAiProfiles(profileId);
            //Assert.IsInstanceOf<ImpositionAiProfileEntity> (response, "response is ImpositionAiProfileEntity");
        }
        /// <summary>
        /// Test GetImpositionAiProfiles1
        /// </summary>
        [Test]
        public void GetImpositionAiProfiles1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetImpositionAiProfiles1();
            //Assert.IsInstanceOf<List<ImpositionAiProfileEntity>> (response, "response is List<ImpositionAiProfileEntity>");
        }
        /// <summary>
        /// Test GetImpositionAiProfiles3
        /// </summary>
        [Test]
        public void GetImpositionAiProfiles3Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetImpositionAiProfiles3();
            //Assert.IsInstanceOf<List<PresetEntity>> (response, "response is List<PresetEntity>");
        }
        /// <summary>
        /// Test GetJsonReportPresets
        /// </summary>
        [Test]
        public void GetJsonReportPresetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetJsonReportPresets();
            //Assert.IsInstanceOf<List<PresetEntity>> (response, "response is List<PresetEntity>");
        }
        /// <summary>
        /// Test GetPdfDieExportPresets
        /// </summary>
        [Test]
        public void GetPdfDieExportPresetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetPdfDieExportPresets();
            //Assert.IsInstanceOf<List<PresetEntity>> (response, "response is List<PresetEntity>");
        }
        /// <summary>
        /// Test GetPdfDieLayoutImportPresets1
        /// </summary>
        [Test]
        public void GetPdfDieLayoutImportPresets1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetPdfDieLayoutImportPresets1();
            //Assert.IsInstanceOf<List<PresetEntity>> (response, "response is List<PresetEntity>");
        }
        /// <summary>
        /// Test GetPdfReportPresets
        /// </summary>
        [Test]
        public void GetPdfReportPresetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetPdfReportPresets();
            //Assert.IsInstanceOf<List<PresetEntity>> (response, "response is List<PresetEntity>");
        }
        /// <summary>
        /// Test GetPdfVectorExportPresets
        /// </summary>
        [Test]
        public void GetPdfVectorExportPresetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetPdfVectorExportPresets();
            //Assert.IsInstanceOf<List<PresetEntity>> (response, "response is List<PresetEntity>");
        }
        /// <summary>
        /// Test GetProductCsvImportPresets
        /// </summary>
        [Test]
        public void GetProductCsvImportPresetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetProductCsvImportPresets();
            //Assert.IsInstanceOf<List<PresetEntity>> (response, "response is List<PresetEntity>");
        }
        /// <summary>
        /// Test GetXmlReportPresets
        /// </summary>
        [Test]
        public void GetXmlReportPresetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetXmlReportPresets();
            //Assert.IsInstanceOf<List<PresetEntity>> (response, "response is List<PresetEntity>");
        }
    }

}
