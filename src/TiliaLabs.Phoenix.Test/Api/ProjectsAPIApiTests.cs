/* 
 * tilia Phoenix API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.0.6
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using TiliaLabs.Phoenix.Client;
using TiliaLabs.Phoenix.Api;
using TiliaLabs.Phoenix.Model;

namespace TiliaLabs.Phoenix.Test
{
    /// <summary>
    ///  Class for testing ProjectsAPIApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ProjectsAPIApiTests
    {
        private ProjectsAPIApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ProjectsAPIApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ProjectsAPIApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ProjectsAPIApi
            //Assert.IsInstanceOfType(typeof(ProjectsAPIApi), instance, "instance is a ProjectsAPIApi");
        }

        /// <summary>
        /// Test ApplyImposeResult1
        /// </summary>
        [Test]
        public void ApplyImposeResult1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //int? resultid = null;
            //string projectid = null;
            //var response = instance.ApplyImposeResult1(layoutindex, resultid, projectid);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ApplyOptimizeResult1
        /// </summary>
        [Test]
        public void ApplyOptimizeResult1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //int? resultid = null;
            //string projectid = null;
            //var response = instance.ApplyOptimizeResult1(layoutindex, resultid, projectid);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ApplyPartialPlan1
        /// </summary>
        [Test]
        public void ApplyPartialPlan1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? resultid = null;
            //int? start = null;
            //int? end = null;
            //string projectid = null;
            //var response = instance.ApplyPartialPlan1(resultid, start, end, projectid);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ApplyPlanResult1
        /// </summary>
        [Test]
        public void ApplyPlanResult1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? resultid = null;
            //string projectid = null;
            //var response = instance.ApplyPlanResult1(resultid, projectid);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ApplyPopulateResult1
        /// </summary>
        [Test]
        public void ApplyPopulateResult1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //int? resultid = null;
            //string projectid = null;
            //var response = instance.ApplyPopulateResult1(layoutindex, resultid, projectid);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ApplyProductMark
        /// </summary>
        [Test]
        public void ApplyProductMarkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string productname = null;
            //string projectid = null;
            //ApplyMarkResource body = null;
            //var response = instance.ApplyProductMark(productname, projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test CreateJob
        /// </summary>
        [Test]
        public void CreateJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateJobResource body = null;
            //var response = instance.CreateJob(body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test CreateLayout1
        /// </summary>
        [Test]
        public void CreateLayout1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //var response = instance.CreateLayout1(projectid);
            //Assert.IsInstanceOf<PhoenixLayoutEntity> (response, "response is PhoenixLayoutEntity");
        }
        /// <summary>
        /// Test CreateProduct1
        /// </summary>
        [Test]
        public void CreateProduct1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //AddProductEntity body = null;
            //var response = instance.CreateProduct1(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test DeleteJob1
        /// </summary>
        [Test]
        public void DeleteJob1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //var response = instance.DeleteJob1(projectid);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test DeleteLayout1
        /// </summary>
        [Test]
        public void DeleteLayout1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //var response = instance.DeleteLayout1(layoutindex, projectid);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test DeleteOutputFile1
        /// </summary>
        [Test]
        public void DeleteOutputFile1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fileid = null;
            //string projectid = null;
            //var response = instance.DeleteOutputFile1(fileid, projectid);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test DeleteProduct1
        /// </summary>
        [Test]
        public void DeleteProduct1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string productname = null;
            //string projectid = null;
            //var response = instance.DeleteProduct1(productname, projectid);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test DeleteUploadedFile1
        /// </summary>
        [Test]
        public void DeleteUploadedFile1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fileid = null;
            //string projectid = null;
            //var response = instance.DeleteUploadedFile1(fileid, projectid);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test DownloadOutputFile1
        /// </summary>
        [Test]
        public void DownloadOutputFile1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fileid = null;
            //string filepath = null;
            //string projectid = null;
            //var response = instance.DownloadOutputFile1(fileid, filepath, projectid);
            //Assert.IsInstanceOf<List<byte[]>> (response, "response is List<byte[]>");
        }
        /// <summary>
        /// Test DownloadUploadedFile1
        /// </summary>
        [Test]
        public void DownloadUploadedFile1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fileid = null;
            //string filepath = null;
            //string projectid = null;
            //var response = instance.DownloadUploadedFile1(fileid, filepath, projectid);
            //Assert.IsInstanceOf<List<byte[]>> (response, "response is List<byte[]>");
        }
        /// <summary>
        /// Test EditLayout1
        /// </summary>
        [Test]
        public void EditLayout1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //EditLayoutResource body = null;
            //var response = instance.EditLayout1(layoutindex, projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ExportCff2DieLayout
        /// </summary>
        [Test]
        public void ExportCff2DieLayoutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //ExportCff2LayoutResource body = null;
            //var response = instance.ExportCff2DieLayout(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ExportCoverSheet
        /// </summary>
        [Test]
        public void ExportCoverSheetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //ExportCoverSheetResource body = null;
            //var response = instance.ExportCoverSheet(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ExportCuttingJdf
        /// </summary>
        [Test]
        public void ExportCuttingJdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //ExportCuttingJdfResource body = null;
            //var response = instance.ExportCuttingJdf(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ExportDxfDieLayout
        /// </summary>
        [Test]
        public void ExportDxfDieLayoutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //ExportDxfLayoutResource body = null;
            //var response = instance.ExportDxfDieLayout(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ExportHpJdf
        /// </summary>
        [Test]
        public void ExportHpJdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //ExportHpJdfResource body = null;
            //var response = instance.ExportHpJdf(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ExportImposedJdf
        /// </summary>
        [Test]
        public void ExportImposedJdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //ExportJdfResource body = null;
            //var response = instance.ExportImposedJdf(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ExportImposedPdf
        /// </summary>
        [Test]
        public void ExportImposedPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //ExportPdfResource body = null;
            //var response = instance.ExportImposedPdf(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ExportJsonReport1
        /// </summary>
        [Test]
        public void ExportJsonReport1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //ExportJsonReportResource body = null;
            //var response = instance.ExportJsonReport1(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ExportPdfDieLayout
        /// </summary>
        [Test]
        public void ExportPdfDieLayoutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //ExportPdfLayoutResource body = null;
            //var response = instance.ExportPdfDieLayout(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ExportPdfReport
        /// </summary>
        [Test]
        public void ExportPdfReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //ExportPdfReportResource body = null;
            //var response = instance.ExportPdfReport(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ExportProductTilingReport
        /// </summary>
        [Test]
        public void ExportProductTilingReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string productname = null;
            //string projectid = null;
            //ExportTilingReportResource body = null;
            //var response = instance.ExportProductTilingReport(productname, projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ExportTilingReport
        /// </summary>
        [Test]
        public void ExportTilingReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //ExportTilingReportResource body = null;
            //var response = instance.ExportTilingReport(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ExportVectorPdf
        /// </summary>
        [Test]
        public void ExportVectorPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //ExportVectorSeparationResource body = null;
            //var response = instance.ExportVectorPdf(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ExportXmlReport1
        /// </summary>
        [Test]
        public void ExportXmlReport1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //ExportXmlReportResource body = null;
            //var response = instance.ExportXmlReport1(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ExportZcc
        /// </summary>
        [Test]
        public void ExportZccTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //ExportZccLayoutResource body = null;
            //var response = instance.ExportZcc(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test GetImposeResult1
        /// </summary>
        [Test]
        public void GetImposeResult1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //int? resultid = null;
            //string projectid = null;
            //bool? thumb = null;
            //int? thumbWidth = null;
            //int? thumbHeight = null;
            //string renderMode = null;
            //var response = instance.GetImposeResult1(layoutindex, resultid, projectid, thumb, thumbWidth, thumbHeight, renderMode);
            //Assert.IsInstanceOf<LayoutResultEntity> (response, "response is LayoutResultEntity");
        }
        /// <summary>
        /// Test GetImposeResults1
        /// </summary>
        [Test]
        public void GetImposeResults1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //bool? thumb = null;
            //int? thumbWidth = null;
            //int? thumbHeight = null;
            //string renderMode = null;
            //var response = instance.GetImposeResults1(layoutindex, projectid, thumb, thumbWidth, thumbHeight, renderMode);
            //Assert.IsInstanceOf<List<LayoutResultEntity>> (response, "response is List<LayoutResultEntity>");
        }
        /// <summary>
        /// Test GetJob1
        /// </summary>
        [Test]
        public void GetJob1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //string productVersion = null;
            //var response = instance.GetJob1(projectid, productVersion);
            //Assert.IsInstanceOf<PhoenixProject> (response, "response is PhoenixProject");
        }
        /// <summary>
        /// Test GetJobs
        /// </summary>
        [Test]
        public void GetJobsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetJobs();
            //Assert.IsInstanceOf<List<PhoenixProject>> (response, "response is List<PhoenixProject>");
        }
        /// <summary>
        /// Test GetLayout1
        /// </summary>
        [Test]
        public void GetLayout1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //bool? frontThumb = null;
            //bool? backThumb = null;
            //int? thumbWidth = null;
            //int? thumbHeight = null;
            //string renderMode = null;
            //var response = instance.GetLayout1(layoutindex, projectid, frontThumb, backThumb, thumbWidth, thumbHeight, renderMode);
            //Assert.IsInstanceOf<PhoenixLayoutEntity> (response, "response is PhoenixLayoutEntity");
        }
        /// <summary>
        /// Test GetLayoutBack1
        /// </summary>
        [Test]
        public void GetLayoutBack1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //bool? thumb = null;
            //int? thumbWidth = null;
            //int? thumbHeight = null;
            //string renderMode = null;
            //var response = instance.GetLayoutBack1(layoutindex, projectid, thumb, thumbWidth, thumbHeight, renderMode);
            //Assert.IsInstanceOf<SurfaceEntity> (response, "response is SurfaceEntity");
        }
        /// <summary>
        /// Test GetLayoutFront1
        /// </summary>
        [Test]
        public void GetLayoutFront1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //bool? thumb = null;
            //int? thumbWidth = null;
            //int? thumbHeight = null;
            //string renderMode = null;
            //var response = instance.GetLayoutFront1(layoutindex, projectid, thumb, thumbWidth, thumbHeight, renderMode);
            //Assert.IsInstanceOf<SurfaceEntity> (response, "response is SurfaceEntity");
        }
        /// <summary>
        /// Test GetLayoutPlate1
        /// </summary>
        [Test]
        public void GetLayoutPlate1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //var response = instance.GetLayoutPlate1(layoutindex, projectid);
            //Assert.IsInstanceOf<PlateEntity> (response, "response is PlateEntity");
        }
        /// <summary>
        /// Test GetLayoutPress1
        /// </summary>
        [Test]
        public void GetLayoutPress1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //var response = instance.GetLayoutPress1(layoutindex, projectid);
            //Assert.IsInstanceOf<PressEntity> (response, "response is PressEntity");
        }
        /// <summary>
        /// Test GetLayoutSheet1
        /// </summary>
        [Test]
        public void GetLayoutSheet1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //var response = instance.GetLayoutSheet1(layoutindex, projectid);
            //Assert.IsInstanceOf<SheetEntity> (response, "response is SheetEntity");
        }
        /// <summary>
        /// Test GetLayouts1
        /// </summary>
        [Test]
        public void GetLayouts1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //bool? frontThumb = null;
            //bool? backThumb = null;
            //int? thumbWidth = null;
            //int? thumbHeight = null;
            //string renderMode = null;
            //var response = instance.GetLayouts1(projectid, frontThumb, backThumb, thumbWidth, thumbHeight, renderMode);
            //Assert.IsInstanceOf<List<PhoenixLayoutEntity>> (response, "response is List<PhoenixLayoutEntity>");
        }
        /// <summary>
        /// Test GetOptimizeResult1
        /// </summary>
        [Test]
        public void GetOptimizeResult1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //int? resultid = null;
            //string projectid = null;
            //bool? thumb = null;
            //int? thumbWidth = null;
            //int? thumbHeight = null;
            //string renderMode = null;
            //var response = instance.GetOptimizeResult1(layoutindex, resultid, projectid, thumb, thumbWidth, thumbHeight, renderMode);
            //Assert.IsInstanceOf<LayoutResultEntity> (response, "response is LayoutResultEntity");
        }
        /// <summary>
        /// Test GetOptimizeResults1
        /// </summary>
        [Test]
        public void GetOptimizeResults1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //bool? thumb = null;
            //int? thumbWidth = null;
            //int? thumbHeight = null;
            //string renderMode = null;
            //var response = instance.GetOptimizeResults1(layoutindex, projectid, thumb, thumbWidth, thumbHeight, renderMode);
            //Assert.IsInstanceOf<List<LayoutResultEntity>> (response, "response is List<LayoutResultEntity>");
        }
        /// <summary>
        /// Test GetOutputFile1
        /// </summary>
        [Test]
        public void GetOutputFile1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fileid = null;
            //string projectid = null;
            //var response = instance.GetOutputFile1(fileid, projectid);
            //Assert.IsInstanceOf<JobFilesEntity> (response, "response is JobFilesEntity");
        }
        /// <summary>
        /// Test GetOutputFiles1
        /// </summary>
        [Test]
        public void GetOutputFiles1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //var response = instance.GetOutputFiles1(projectid);
            //Assert.IsInstanceOf<List<JobFilesEntity>> (response, "response is List<JobFilesEntity>");
        }
        /// <summary>
        /// Test GetPlanResult1
        /// </summary>
        [Test]
        public void GetPlanResult1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? resultid = null;
            //string projectid = null;
            //bool? layouts = null;
            //bool? thumb = null;
            //bool? planThumb = null;
            //int? thumbWidth = null;
            //int? thumbHeight = null;
            //string renderMode = null;
            //var response = instance.GetPlanResult1(resultid, projectid, layouts, thumb, planThumb, thumbWidth, thumbHeight, renderMode);
            //Assert.IsInstanceOf<PlanResultEntity> (response, "response is PlanResultEntity");
        }
        /// <summary>
        /// Test GetPlanResults1
        /// </summary>
        [Test]
        public void GetPlanResults1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //int? limit = null;
            //int? start = null;
            //string sorting = null;
            //bool? layouts = null;
            //bool? thumb = null;
            //bool? planThumb = null;
            //int? thumbWidth = null;
            //int? thumbHeight = null;
            //string renderMode = null;
            //var response = instance.GetPlanResults1(projectid, limit, start, sorting, layouts, thumb, planThumb, thumbWidth, thumbHeight, renderMode);
            //Assert.IsInstanceOf<List<PlanResultEntity>> (response, "response is List<PlanResultEntity>");
        }
        /// <summary>
        /// Test GetPopulateResult1
        /// </summary>
        [Test]
        public void GetPopulateResult1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //int? resultid = null;
            //string projectid = null;
            //bool? thumb = null;
            //int? thumbWidth = null;
            //int? thumbHeight = null;
            //string renderMode = null;
            //var response = instance.GetPopulateResult1(layoutindex, resultid, projectid, thumb, thumbWidth, thumbHeight, renderMode);
            //Assert.IsInstanceOf<LayoutResultEntity> (response, "response is LayoutResultEntity");
        }
        /// <summary>
        /// Test GetPopulateResults1
        /// </summary>
        [Test]
        public void GetPopulateResults1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //bool? thumb = null;
            //int? thumbWidth = null;
            //int? thumbHeight = null;
            //string renderMode = null;
            //var response = instance.GetPopulateResults1(layoutindex, projectid, thumb, thumbWidth, thumbHeight, renderMode);
            //Assert.IsInstanceOf<List<LayoutResultEntity>> (response, "response is List<LayoutResultEntity>");
        }
        /// <summary>
        /// Test GetProduct1
        /// </summary>
        [Test]
        public void GetProduct1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string productname = null;
            //string projectid = null;
            //bool? thumb = null;
            //int? thumbWidth = null;
            //int? thumbHeight = null;
            //string renderMode = null;
            //var response = instance.GetProduct1(productname, projectid, thumb, thumbWidth, thumbHeight, renderMode);
            //Assert.IsInstanceOf<PhoenixProductEntity> (response, "response is PhoenixProductEntity");
        }
        /// <summary>
        /// Test GetProducts1
        /// </summary>
        [Test]
        public void GetProducts1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //bool? thumb = null;
            //int? thumbWidth = null;
            //int? thumbHeight = null;
            //string renderMode = null;
            //var response = instance.GetProducts1(projectid, thumb, thumbWidth, thumbHeight, renderMode);
            //Assert.IsInstanceOf<List<PhoenixProductEntity>> (response, "response is List<PhoenixProductEntity>");
        }
        /// <summary>
        /// Test GetUploadedFile1
        /// </summary>
        [Test]
        public void GetUploadedFile1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fileid = null;
            //string projectid = null;
            //var response = instance.GetUploadedFile1(fileid, projectid);
            //Assert.IsInstanceOf<JobFilesEntity> (response, "response is JobFilesEntity");
        }
        /// <summary>
        /// Test GetUploadedFiles1
        /// </summary>
        [Test]
        public void GetUploadedFiles1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //var response = instance.GetUploadedFiles1(projectid);
            //Assert.IsInstanceOf<List<JobFilesEntity>> (response, "response is List<JobFilesEntity>");
        }
        /// <summary>
        /// Test ImportDieTemplate1
        /// </summary>
        [Test]
        public void ImportDieTemplate1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //ImportDieTemplateResource body = null;
            //var response = instance.ImportDieTemplate1(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ImportProductCsv
        /// </summary>
        [Test]
        public void ImportProductCsvTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //ImportProductCsvResource body = null;
            //var response = instance.ImportProductCsv(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test Impose1
        /// </summary>
        [Test]
        public void Impose1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //ImposeResource body = null;
            //var response = instance.Impose1(layoutindex, projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test OpenJob
        /// </summary>
        [Test]
        public void OpenJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FormDataContentDisposition file = null;
            //var response = instance.OpenJob(file);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test Optimize1
        /// </summary>
        [Test]
        public void Optimize1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //OptimizeResource body = null;
            //var response = instance.Optimize1(layoutindex, projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test PlaceDieTemplate
        /// </summary>
        [Test]
        public void PlaceDieTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //PlaceDieTemplateResource body = null;
            //var response = instance.PlaceDieTemplate(layoutindex, projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test Plan1
        /// </summary>
        [Test]
        public void Plan1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //PlanResource body = null;
            //var response = instance.Plan1(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test PlanStart1
        /// </summary>
        [Test]
        public void PlanStart1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //PlanResource body = null;
            //var response = instance.PlanStart1(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test PlanStatus1
        /// </summary>
        [Test]
        public void PlanStatus1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //var response = instance.PlanStatus1(projectid);
            //Assert.IsInstanceOf<PlanStatusEntity> (response, "response is PlanStatusEntity");
        }
        /// <summary>
        /// Test PlanStop1
        /// </summary>
        [Test]
        public void PlanStop1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //var response = instance.PlanStop1(projectid);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test Populate1
        /// </summary>
        [Test]
        public void Populate1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //PopulateResource body = null;
            //var response = instance.Populate1(layoutindex, projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test ResizeLayoutSheet1
        /// </summary>
        [Test]
        public void ResizeLayoutSheet1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //ResizeSheetResource body = null;
            //var response = instance.ResizeLayoutSheet1(layoutindex, projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test Run
        /// </summary>
        [Test]
        public void RunTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //RunScriptResource body = null;
            //var response = instance.Run(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test SaveJob1
        /// </summary>
        [Test]
        public void SaveJob1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //SaveJobResource body = null;
            //instance.SaveJob1(projectid, body);
            
        }
        /// <summary>
        /// Test SaveJobTemplate
        /// </summary>
        [Test]
        public void SaveJobTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //SaveJobTemplateResource body = null;
            //var response = instance.SaveJobTemplate(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test SetLayoutPlate1
        /// </summary>
        [Test]
        public void SetLayoutPlate1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //SetPlateResource body = null;
            //var response = instance.SetLayoutPlate1(layoutindex, projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test SetLayoutPress1
        /// </summary>
        [Test]
        public void SetLayoutPress1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //SetPressResource body = null;
            //var response = instance.SetLayoutPress1(layoutindex, projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test SetLayoutSheet1
        /// </summary>
        [Test]
        public void SetLayoutSheet1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //SetSheetResource body = null;
            //var response = instance.SetLayoutSheet1(layoutindex, projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test Snap
        /// </summary>
        [Test]
        public void SnapTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //AutosnapResource body = null;
            //var response = instance.Snap(projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test SnapProduct
        /// </summary>
        [Test]
        public void SnapProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string productname = null;
            //string projectid = null;
            //AutosnapArtworkEntity body = null;
            //var response = instance.SnapProduct(productname, projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test StepRepeat
        /// </summary>
        [Test]
        public void StepRepeatTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? layoutindex = null;
            //string projectid = null;
            //StepRepeatResource body = null;
            //var response = instance.StepRepeat(layoutindex, projectid, body);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
        /// <summary>
        /// Test UploadFile1
        /// </summary>
        [Test]
        public void UploadFile1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectid = null;
            //FormDataContentDisposition file = null;
            //var response = instance.UploadFile1(projectid, file);
            //Assert.IsInstanceOf<ResponseEntity> (response, "response is ResponseEntity");
        }
    }

}
